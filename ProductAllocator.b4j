AppType=StandardJava
Build1=Default,b4j.example
File1=config.properties
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=jserver
Library3=jsql
Library4=json
Library5=javaobject
Library6=bcrypt
Module1=ShopLoginHandler
Module2=ShopRegisterationHandler
Module3=Utility
NumberOfFiles=1
NumberOfLibraries=6
NumberOfModules=3
Version=8.5
@EndOfDesignText@
#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True 
	#AdditionalJar: postgresql
	#AdditionalJar: jjwt-api-0.11.2
	#AdditionalJar: jjwt-impl-0.11.2
	#AdditionalJar: jjwt-jackson-0.11.2
	#AdditionalJar: jjwt-0.8.0
	#AdditionalJar: jackson-databind-2.8.9
	#AdditionalJar: jackson-core-2.8.9
	#AdditionalJar: jackson-annotations-2.8.0
#End Region

Sub Process_Globals
	Private srvr As Server
	Public poolOfConnection As ConnectionPool
	Public publicKey As JavaObject
	Public privateKey As JavaObject
	
End Sub

Sub AppStart (Args() As String)
	Dim serverConfiguration As Map = Utility.LoadConfigurationSetting	
	
	poolOfConnection.Initialize(serverConfiguration.Get("DBJDBC"),serverConfiguration.Get("DBURL"),serverConfiguration.Get("DBUSER"),serverConfiguration.Get("DBPASSWORD"))
	
	srvr.Initialize("srvr")
	srvr.Port = serverConfiguration.Get("ServerPort")
	srvr.StaticFilesFolder = File.Combine(File.DirApp, "www")
	srvr.AddHandler("/api/v1/shops/register","ShopRegisterationHandler",False)
	srvr.AddHandler("/api/v1/shops/login","ShopLoginHandler",False)
	srvr.Start
	ConfigureKeys
	
	
	Log($"Server is up and running at http://localhost:${srvr.Port}"$)
	If poolOfConnection.IsInitialized Then
		Log("Connected to the Database Successfully")
	Else
		Log("Unable to Connect to the Database")
	End If

	StartMessageLoop
	'open browser and navigate to: http://127.0.0.1:51042/
End Sub

Sub ConfigureKeys()

	Dim IOSignatureAlgorithJO As JavaObject
	Dim IOSecurityKeysJO As JavaObject
	
	IOSignatureAlgorithJO.InitializeStatic("io.jsonwebtoken.SignatureAlgorithm")
	IOSecurityKeysJO.InitializeStatic("io.jsonwebtoken.security.Keys")
	
	Dim KeyPairJO As JavaObject = IOSecurityKeysJO.RunMethodJO("keyPairFor",Array(IOSignatureAlgorithJO.GetFieldJO("RS256")))
	privateKey = KeyPairJO.RunMethodJO("getPrivate",Null)
	publicKey = KeyPairJO.RunMethodJO("getPublic",Null)
End Sub
